{"version":3,"sources":["App.js","i18n.js","index.js"],"names":["Header","lazy","Footer","Homepage","ProductOverview","Impressum","About","BrandsOverview","MobileToolbar","ContactBlock","ScrollToTop","App","props","state","isMobile","this","setState","window","innerWidth","prevProps","location","scrollTo","fallback","basename","Fragment","exact","path","component","React","Component","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","whitelist","interpolation","escapeValue","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAGMA,EAASC,gBAAK,kBAAM,wDACpBC,EAASD,gBAAK,kBAAM,wDACpBE,EAAWF,gBAAK,kBAAM,kCACtBG,EAAkBH,gBAAK,kBAAM,sEAC7BI,EAAYJ,gBAAK,kBAAM,wDACvBK,EAAQL,gBAAK,kBAAM,wDACnBM,EAAiBN,gBAAK,kBAAM,wDAC5BO,EAAgBP,gBAAK,kBAAM,6EAC3BQ,EAAeR,gBAAK,kBAAM,sEAE1BS,EAAcT,gBAAK,kBAAM,kCAkDhBU,E,kDA/Cb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,UAAU,GAHK,E,gEAQjBC,KAAKC,SAAS,CACZF,SAAUG,OAAOC,YAAc,S,yCAIhBC,GACbJ,KAAKH,MAAMQ,WAAaD,EAAUC,UACpCH,OAAOI,SAAS,EAAG,K,+BAKrB,OACE,kBAAC,WAAD,CAAUC,SAAU,4CAClB,kBAAC,IAAD,CAAYC,SAAS,KAClBR,KAAKF,MAAMC,SACV,kBAAC,IAAMU,SAAP,KACE,kBAAChB,EAAD,MACA,kBAACC,EAAD,OAGA,kBAACT,EAAD,MAEJ,kBAACU,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOe,OAAK,EAACC,KAAK,IAAIC,UAAWxB,IACjC,kBAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,YAAYC,UAAWvB,IACzC,kBAAC,IAAD,CAAOqB,OAAK,EAACC,KAAK,aAAaC,UAAWtB,IAC1C,kBAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,aAAaC,UAAWrB,IAC1C,kBAAC,IAAD,CAAOmB,OAAK,EAACC,KAAK,oBAAoBC,UAAWpB,OAIvD,kBAACL,EAAD,W,GA1CU0B,IAAMC,W,gCCJxBC,IAGKC,IAAIC,KAGJD,IAAIE,KAEJF,IAAIG,KAGJC,KAAK,CACFC,YAAa,KACbC,OAAO,EACPC,UAhBU,CAAC,KAAM,KAAM,MAkBvBC,cAAe,CACXC,aAAa,KAKVV,EAAf,ECzBAW,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.6eeb6297.chunk.js","sourcesContent":["import React, { lazy, Suspense } from 'react';\nimport { Switch, Route, HashRouter } from 'react-router-dom';\n\nconst Header = lazy(() => import('./components/header/Header'));\nconst Footer = lazy(() => import('./components/footer/Footer'));\nconst Homepage = lazy(() => import('./pages/homepage/Homepage'));\nconst ProductOverview = lazy(() => import('./pages/product-overview/ProductOverview'));\nconst Impressum = lazy(() => import('./pages/impressum/Impressum'));\nconst About = lazy(() => import('./pages/about/About'));\nconst BrandsOverview = lazy(() => import('./pages/brands-overview/BrandsOverview'));\nconst MobileToolbar = lazy(() => import('./components/mobile-toolbar/MobileToolbar'));\nconst ContactBlock = lazy(() => import('./components/contact-block/ContactBlock'));\n\nconst ScrollToTop = lazy(() => import('./global/js/scrollToTop'));\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMobile: false\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      isMobile: window.innerWidth <= 1020\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return (\n      <Suspense fallback={<div>Loading...</div>}>\n        <HashRouter basename=\"/\">\n          {this.state.isMobile ? (\n            <React.Fragment>\n              <MobileToolbar />\n              <ContactBlock />\n            </React.Fragment>\n          ) : (\n              <Header />\n            )}\n          <ScrollToTop>\n            <Switch>\n              <Route exact path='/' component={Homepage} />\n              <Route exact path='/produkte' component={ProductOverview} />\n              <Route exact path='/impressum' component={Impressum} />\n              <Route exact path='/ueber-uns' component={About} />\n              <Route exact path='/markenuebersicht' component={BrandsOverview} />\n            </Switch>\n          </ScrollToTop>\n        </HashRouter>\n        <Footer />\n      </Suspense>\n    );\n  }\n}\n\nexport default App;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// don't want to use this?\n// have a look at the Quick start guide \n// for passing in lng and translations on init\n\nconst LANGUAGES = ['en', 'de', 'tr'];\n\ni18n\n    // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n    // learn more: https://github.com/i18next/i18next-http-backend\n    .use(Backend)\n    // detect user language\n    // learn more: https://github.com/i18next/i18next-browser-languageDetector\n    .use(LanguageDetector)\n    // pass the i18n instance to react-i18next.\n    .use(initReactI18next)\n    // init i18next\n    // for all options read: https://www.i18next.com/overview/configuration-options\n    .init({\n        fallbackLng: 'en',\n        debug: true,\n        whitelist: LANGUAGES,\n\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n        }\n    });\n\n\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nimport './i18n';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}